[tool.poetry]
version = "0.5.7"
name = "segformer-quantization-pipeline"
description = "An end-to-end quantization evaluation pipeline for SegFormer models on semantic segmentation tasks"
authors = ["qte77 <qte@77.gh>"]
readme = "README.md"
packages = [{include = "segformer_quantization_pipeline"}]

[tool.poetry.dependencies]
python = "^3.10"
torch = "^2.2.0"
transformers = "4.44.0"
evaluate = "0.4.2"
quanto = "^0.2.0"
optimum-quanto = "^0.2.0"
wandb = "0.17.8"
pillow = "^9.0.0"
datasets = "^2.0.0"
accelerate = "0.33.0"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
pytest = "^7.0.0"
black = "^22.0.0"
isort = "^5.0.0"
flake8 = "^4.0.0"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
mkdocs = "^1.6.1"
mkdocs-awesome-pages-plugin = "^2.9.3"
mkdocs-gen-files = "^0.5.0"
mkdocs-linkcheck = "^1.1.1"
mkdocs-literate-nav = "^0.6.1"
mkdocs-material = "^9.5.44"
mkdocs-section-index = "^0.3.8"
mkdocstrings = {version = "^0.24.0", extras = ["python"]}

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 100
target-version = ['py311']

[tool.isort]
profile = "black"
line_length = 100

[tool.flake8]
max-line-length = 100
extend-ignore = "E203, W503"

[tool.bumpversion]
current_version = "0.5.7"
parse = "(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)"
serialize = ["{major}.{minor}.{patch}"]
commit = true
tag = true
allow_dirty = false
ignore_missing_version = false
sign_tags = false
tag_name = "v{new_version}"
tag_message = "Bump version: {current_version} → {new_version}"
message = "Bump version: {current_version} → {new_version}"
commit_args = ""

[[tool.bumpversion.files]]
filename = "pyproject.toml"
search = 'version = "{current_version}"'
replace = 'version = "{new_version}"'

[[tool.bumpversion.files]]
filename = "__version__.py"
search = '__version__: str = "{current_version}"'
replace = '__version__: str = "{new_version}"'

[[tool.bumpversion.files]]
filename = "README.md"
search = "The current version is <{current_version}>."
replace = "The current version is <{new_version}>."

[[tool.bumpversion.files]]
filename = "CHANGELOG.md"
search = """
[Unreleased]
---
"""
replace = """
[Unreleased]
---

[{new_version}] - {now:%Y-%m-%d}
---
"""


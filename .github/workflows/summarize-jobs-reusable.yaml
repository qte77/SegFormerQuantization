---
# https://ecanarys.com/supercharging-github-actions-with-job-summaries-and-pull-request-comments/
# FIXME currently bug in gha summaries ? $GITHUB_STEP_SUMMARY files are empty
# https://github.com/orgs/community/discussions/110283
# https://github.com/orgs/community/discussions/67991
name: Summarize workflow jobs

on:
  workflow_call:
    outputs:
      summary:
        description: "Outputs summaries of jobs in a workflow"
        value: ${{ jobs.generate_summary.outputs.summary }}
    #inputs:
    #  branch_to_summarize:
    #    required: false
    #    default: 'main'
    #    type: string

jobs:
  generate_summary:
    name: Generate Summary
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: read
      checks: read
      pull-requests: none
    outputs:
      summary: ${{ steps.changed_files.outputs.summary }}
    steps:

      - name: Add general information
        id: general_info
        run: |
          echo "# Job Summaries" >> $GITHUB_STEP_SUMMARY
          echo "## Job: `${{ github.job }}` - Date: $(date +'%Y-%m-%d %H:%M:%S')" >> $GITHUB_STEP_SUMMARY

      - name: Add step states
        id: step_states
        run: |
          summary_path=$(dirname "$GITHUB_STEP_SUMMARY")
          echo ${{ steps.general_info.outputs.summary }} >> $GITHUB_STEP_SUMMARY
          echo "### Steps:" >> $GITHUB_STEP_SUMMARY
          for file in "$summary_path"/step_summary_*; do
            if [ -f "$file" ]; then
              # Check if the file is not the same as $GITHUB_STEP_SUMMARY
              if [ "$file" != "$GITHUB_STEP_SUMMARY" ]; then
                # Check if the file contains valid JSON
                if jq -e . >/dev/null 2>&1 <<< "$(cat "$file")"; then
                  # Parse and output JSON content
                  jq -r '
                    .steps[]
                    | select(.conclusion != null)
                    | "- **\(.name)**: \(
                      if .conclusion == "success" then ":white_check_mark:"
                      elif .conclusion == "failure" then ":x:"
                      else ":warning:" end
                    )"
                  ' "$file" >> $GITHUB_STEP_SUMMARY
                else
                  echo "Invalid JSON in $file." >> $GITHUB_STEP_SUMMARY
                fi
              else
                echo "Skipping $file as it is the same as $GITHUB_STEP_SUMMARY." >> $GITHUB_STEP_SUMMARY
              fi
            else
              echo "File $file does not exist." >> $GITHUB_STEP_SUMMARY
            fi
          done

      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          # ref: "${{ branch_to_summarize }}"
          fetch-depth: 2

      - name: Add changed files since last push
        id: changed_files
        run: |
          current=$(git show -s --format=%ci HEAD)
          previous=$(git show -s --format=%ci HEAD~1)
          echo ${{ steps.step_states.outputs.summary }} >> $GITHUB_STEP_SUMMARY
          echo "### Changed files on '${{ github.ref }}':" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "Current Commit: ${current}" >> $GITHUB_STEP_SUMMARY
          echo "Previous Commit: ${previous}" >> $GITHUB_STEP_SUMMARY
          git diff --name-only HEAD^ HEAD >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
...